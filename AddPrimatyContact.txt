@isTest
public class AddPrimaryContactTest
{
    @testsetup
    public static void setupMeth()
    {
        List<Account> accs = new List<Account>();
        
        for(integer i = 0; i < 100; i++)
        {
            if(i < 50)
            {
                Account a = new Account();
                a.BillingState = 'NY';
                a.Name = 'Test Acc NY -'+i;
                accs.add(a);
            }
            if (i >= 50)
            {
                Account a = new Account();
                a.BillingState = 'CA';
                a.Name = 'Test Acc CA -'+i;
                accs.add(a);               
            }
        }
        
        insert accs;
        
        Contact con = new Contact(LastName = 'McTester', FirstName = 'Coder');
        insert con;
    }
    
    public static testmethod void methodOfTest()
    {
        Test.StartTest();
        Contact con = [SELECT ID, LastName, FirstName FROM Contact WHERE LastName = 'McTester' AND FirstName = 'Coder' LIMIT 1];
        AddPrimaryContact apc = new AddPrimaryContact(con, 'CA');
        System.enqueueJob(apc);
        Test.StopTest();
        
        List<Account> accsCA = [SELECT ID, BillingState FROM Account WHERE BillingState = 'CA'];
        List<Account> accsNY = [SELECT ID, BillingState FROM Account WHERE BillingState = 'NY'];
        
        List<Contact> lstContCA = [SELECT ID FROM Contact WHERE AccountID IN : accsCA];
        List<Contact> lstContNY = [SELECT ID FROM Contact WHERE AccountID IN : accsNY];
                
        system.assertEquals(lstContCA.size(), 50);
        system.assertEquals(lstContNY.size(), 0);        
    }  
}